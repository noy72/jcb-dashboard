// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Statement {
  id           Int      @id @default(autoincrement())
  payment_date DateTime
  total_amount Int
  imported_at  DateTime @default(now())
  transactions Transaction[]
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Transaction {
  id               Int      @id @default(autoincrement())
  transaction_date DateTime
  store_name       String
  amount           Int
  payment_type     String
  note             String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  category         Category? @relation(fields: [categoryId], references: [id])
  categoryId       Int?
  statement        Statement @relation(fields: [statementId], references: [id])
  statementId      Int
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  transactions Transaction[]
  mappings     StoreCategoryMapping[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
}

model MajorCategory {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  minor_categories MinorCategory[]
  store_mappings StoreHierarchicalCategoryMapping[]
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
}

model MinorCategory {
  id               Int             @id @default(autoincrement())
  name             String
  major_category   MajorCategory   @relation(fields: [major_category_id], references: [id], onDelete: Cascade)
  major_category_id Int
  store_mappings   StoreHierarchicalCategoryMapping[]
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt

  @@unique([major_category_id, name]) // Same minor category name allowed in different major categories
}

model StoreCategoryMapping {
  id         Int      @id @default(autoincrement())
  store_name String   @unique
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model StoreHierarchicalCategoryMapping {
  id                Int           @id @default(autoincrement())
  store_name        String        @unique
  major_category    MajorCategory @relation(fields: [major_category_id], references: [id])
  major_category_id Int
  minor_category    MinorCategory? @relation(fields: [minor_category_id], references: [id])
  minor_category_id Int?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
}
